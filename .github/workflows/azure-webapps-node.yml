# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches:
      - main
      - dev
      - test

  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # checkout the repo
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3
      
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: 'Azure docker login'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - id: 'tag_format'
      name: 'tag format'
      env:
        TAG_FORMAT: "%Y%m%dT%H%M%SZ"
        TZ: 'Asia/Tokyo'
      run: echo "::set-output name=tag::$(date +${TAG_FORMAT})$(echo ${{ github.sha }} | cut -b 1-8)"
    - name: 'docker build'
      run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ steps.tag_format.outputs.tag }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ steps.tag_format.outputs.tag }}

    - name: 'Deploy to Azure Container Instances'
      uses: 'azure/aci-deploy@v1'
      with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        dns-name-label: 'hellodnscontainer'
        image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ steps.tag_format.outputs.tag }}
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: acisampleapp
        # サブスクリプションが無料だとできない？
        # cpu: 1   #Optional
        # memory: 0.1   #Optional
        environment-variables: PORT=80
        # check azure usable location.
        # az account list-locations --query "[].{Name:name}" --output table
        location: 'Japan East'